#!/usr/bin/php
<?php

use Strukt\Env;
use Strukt\Package\Repos;
use Strukt\Framework\Configuration;
use Strukt\Console\Color;

require "bootstrap.php";
require "bookkeeper.php";

App\Cli\Printer::rawOutput();
useDb(config("package.db.cli"));

$argv = $_SERVER["argv"];

array_shift($argv);//xhttp
$arg1 = array_shift($argv);//arg1

if(empty($arg1) || in_array(strtolower(trim($arg1)), [
	"usage", 
	"help",
	"--help", 
	"-h","?"])){

$tpl = "
 {{xhttp}} {{descr}}

 {{usage}}: xhttp <method> <route> [params...]

 {{argm}}:

    {{method}}:       GET, POST ...etc
    {{route}}:        Example: /login Default: / root
    {{param}}:   Example: username=pitsolu password=p@55w0rd

 {{example}}:  ./xhttp POST /login username=pitsolu password=p@55word
";

	$output = Strukt\Templator::create($tpl, array(

		"xhttp" => Color::write("white:bold","xhttp"),
		"usage" => Color::write("yellow","Usage"),
		"descr" => Color::write("blue", "XHTTP is a CLI utility that mimicks a HTTP client."),
		"argm" => Color::write("yellow","Arguments"),
		"method" => Color::write("cyan","method"),
		"route" => Color::write("cyan","route"),
		"param" => Color::write("cyan","parameters"),
		"example" => Color::write("yellow", "Example")
	));

	exit(sprintf("\n %s\n\n", $output));
}

if(negate(fs(phar("cfg")->adapt())->isFile("app.ini"))){

	echo Color::write("red", "\n Application is not ready!");
	echo " Run:\n";
	echo Color::writeln("yellow","  ./console app:make {{app_name}}");
	echo Color::writeln("yellow","  ./console app:reload\n");
	exit;
}

$method = strtoupper(trim($arg1));//method
$methods = [
	"ANY",
	"PUT", 
	"GET", 
	"PATH", 
	"POST", 
	"DELETE",
	"PATCH",
	"OPTIONS"
];

if(!in_array($method, $methods)){

	$uri = $method;
	$method = "GET";
}

if(empty($uri))//uri
	$uri = array_shift($argv);

$params = [];
if(!empty($argv))
	array_map(function($param) use(&$params){

		if(preg_match("/\w\=\w/", $param)){

			list($key, $val) = explode("=", $param);
			$params[$key] = $val;
		}

	}, $argv);

$_SERVER["REQUEST_URI"] = $uri;
$_SERVER["REQUEST_METHOD"] = strtoupper(trim($method));
$_REQUEST = $_POST = $params;

env("json_validation_err", true);
config("app.type","App:Cli");

App\Middleware\XSession::withOptions(array(

	"username"=>"admin",
	"allow"=>[

		"strukt:auth",
		// "user_all"
	]
));

$kernel = new App\Kernel(new Configuration);
exit($kernel->run());